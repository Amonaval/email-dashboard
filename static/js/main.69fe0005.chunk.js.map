{"version":3,"sources":["mock/inboxMails.js","AppConfig.js","utils/utils.js","components/EmailListItem.js","components/EmailList.js","components/Sidebar.js","components/EmailDetails.js","components/EmailHead.js","components/ComposeEmail.js","MailBoard.js","mock/credentials.js","App.js","serviceWorker.js","index.js"],"names":["mailsMock","userName","emailId","mails","from","address","time","message","subject","tag","read","to","months","getPrettyDate","date","newDate","split","month","parseInt","concat","setInSessionStorage","item","value","sessionStorage","setItem","JSON","stringify","getFromSessionStorage","parse","getItem","getFromLocalStorage","localStorage","EmailListItem","_ref","email","onEmailClicked","selected","currentSection","classes","react_default","a","createElement","onClick","id","className","data-read","EmailList","emails","onEmailSelected","selectedEmailId","length","map","components_EmailListItem","Sidebar","unReadCount","setSidebarSection","composeEmail","deletedCount","reduce","previous","msg","bind","EmailDetails","onDelete","getPrettyTime","getDeleteButton","EmailHead","currentSectionMails","type","placeholder","ComposeEmail","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleEmailSend","assertThisInitialized","newItem","objectSpread","newItemSend","_this2","htmlFor","name","onChange","e","setState","target","rows","cols","Component","MailBoard","args","allMails","cachedMails","loggedInUser","_isEmpty","forEach","unshift","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","filterEmails","showPane","showCompose","filter","mail","index","findIndex","x","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","section","val","data","toConsumableArray","CD","Date","dateString","getFullYear","getMonth","getDate","sentItem","itemList","_this$state","currentEmail","find","isAuthenticated","components_Sidebar","components_EmailHead","components_EmailList","openEmail","components_EmailDetails","deleteMessage","components_ComposeEmail","React","credentials","password","AuthMailBoard","react_router_dom","history","createHistory","basename","process","AuthButton","react_router","exact","path","component","Login","PrivateRoute","fakeAuth","authenticate","username","cb","setTimeout","signout","withRouter","push","_ref2","rest","objectWithoutProperties","assign","render","pathname","location","loginSuccess","login","_this3$state","_this3","_this4","class","required","Boolean","window","hostname","match","ReactDOM","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69fe0005.chunk.js","sourcesContent":["const mailsMock = {\n\tuserName: 'Amolnaval',\n\temailId: 'amol.naval89@gmail.com',\n    mails: [\n  {\n    \"from\": \"Maxime Preaux\",\n    \"address\": \"maxime@codepen.io\",\n    \"time\": \"2016-10-07 15:35:14\",\n    \"message\": \"This is my first attempt at using React.\\nDuis cursus, diam at pretium aliquet, metus urna convallis erat, eget tincidunt dui augue eu tellus. Phasellus elit pede, malesuada vel, venenatis vel, faucibus id, libero. Donec consectetuer mauris id sapien. Cras\",\n    \"subject\": \"Messing with React.js\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"Dribbble\",\n    \"address\": \"digest@dribbble.com\",\n    \"time\": \"2016-05-09 14:23:54\",\n    \"message\": \"Here are the latest shots from Dribbblers you follow! Nec mauris blandit mattis. Cras eget nisi dictum augue malesuada malesuada. Integer id magna et ipsum cursus vestibulum. Mauris magna. Duis dignissim tempor arcu. Vestibulum ut eros non enim commodo hendrerit. Donec porttitor tellus non magna. Nam ligula elit, pretium et, rutrum non, hendrerit id, ante. Nunc mauris sapien,\",\n    \"subject\": \"Dribbble Digest\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"Christopher Medina\",\n    \"address\": \"dolor@luctusutpellentesque.net\",\n    \"time\": \"2015-07-03 21:48:27\",\n    \"message\": \"Woops, that last pull request messed up the csproj. Mauris. Morbi non sapien molestie orci tincidunt adipiscing. Mauris molestie pharetra\",\n    \"subject\": \"Broken PR?\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"Wylie Roberson\",\n    \"address\": \"mi@utnisi.edu\",\n    \"time\": \"2016-01-08 18:39:34\",\n    \"message\": \"Every wish you could read all this Lorem Ipsum stuff? Subornareornare lectus justo eu arcu. Morbi sit amet massa. Quisque porttitor eros nec tellus. Nunc lectus pede, ultrices\",\n    \"subject\": \"Learn latin in 10 days!\",\n    \"tag\": \"deleted\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Slack HQ\",\n    \"address\": \"fishbowl@slack.com\",\n    \"time\": \"2015-07-21 09:47:57\",\n    \"message\": \"Click here to consectetuer rhoncus. Nullam velit dui, semper et, lacinia vitae, sodales at, velit. Pellentesque ultricies dignissim lacus. Aliquam rutrum lorem ac risus. Morbi\",\n    \"subject\": \"Join the Fishbowl Team\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Ray Lamb\",\n    \"address\": \"ut.erat.Sed@volutpatNulla.co.uk\",\n    \"time\": \"2016-01-08 10:14:40\",\n    \"message\": \"Trepalium is going on tour! Duis cursus, diam at pretium aliquet, metus urna convallis erat, eget tincidunt dui augue eu tellus. Phasellus elit pede, malesuada vel, venenatis vel, faucibus id, libero. Donec consectetuer mauris\",\n    \"subject\": \"Concert tickets on sale\",\n    \"tag\": \"inbox\",\n    \"read\": \"false\"\n  },\n  {\n    \"from\": \"StackOverflow\",\n    \"address\": \"non@semmolestie.com\",\n    \"time\": \"2016-06-29 15:39:06\",\n    \"message\": \"You're almost done! Finish registering your account, and you'll be able to demand answers from random people that are smarter than you. Cum sociis natoque penatibus et magnis dis parturient\",\n    \"subject\": \"Verify your StackOverflow account\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Pastebin.com\",\n    \"address\": \"Phasellus.dapibus.quam@vitaenibh.org\",\n    \"time\": \"2016-03-14 09:43:27\",\n    \"message\": \"Buy a cheap lifetime subscrition today! Or we'll remind you every two weeks until you die. Quis massa. Mauris vestibulum, neque sed dictum eleifend, nunc risus varius orci, in consequat enim diam vel arcu. Curabitur ut odio vel est tempor bibendum. Donec felis orci, adipiscing non, luctus sit amet, faucibus ut, nulla.\",\n    \"subject\": \"Pastebin PRO\",\n    \"tag\": \"deleted\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"TurboTax Online\",\n    \"address\": \"quam.a.felis@montesnasceturridiculus.co.uk\",\n    \"time\": \"2016-08-01 19:51:23\",\n    \"message\": \"Your tax refund for 2015 entitles you to $12.03. Fantastic! Integer vulputate, risus a ultricies adipiscing, enim mi tempor lorem, eget mollis lectus pede\",\n    \"subject\": \"Your refund is waiting\",\n    \"tag\": \"deleted\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Codepen Info\",\n    \"address\": \"pharetra.Nam@lacus.com\",\n    \"time\": \"2016-07-05 18:20:04\",\n    \"message\": \"Great job! Having a terrible sleep schedule is paying off! Cursus in, hendrerit consectetuer, cursus et, magna. Praesent interdum ligula eu enim. Etiam imperdiet dictum magna. Ut tincidunt orci quis lectus. Nullam suscipit, est ac\",\n    \"subject\": \"Your pen reached 1,000 views!\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"from\": \"Lithium Hosting\",\n    \"address\": \"magna@nequepellentesquemassa.edu\",\n    \"time\": \"2016-03-16 13:49:17\",\n    \"message\": \"Oh noes! Your website (deammer.com) is about to be disconnected. metus. Aliquam erat volutpat. Nulla facilisis. Suspendisse commodo tincidunt nibh. Phasellus nulla. Integer\",\n    \"subject\": \"LH - Renewal\",\n    \"tag\": \"inbox\",\n    \"read\": \"true\"\n  },\n  {\n    \"to\": \"American Airlines\",\n    \"address\": \"magna.Ut@nibhPhasellus.co.uk\",\n    \"time\": \"2016-02-17 21:00:15\",\n    \"message\": \"Thank you for booking two overpriced tickets for Seattle. Etiam ligula tortor, dictum eu, placerat eget, venenatis a, magna. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam laoreet, libero et tristique pellentesque, tellus sem mollis dui, in sodales elit erat vitae risus. Duis a mi fringilla mi lacinia mattis. Integer eu lacus.\",\n    \"subject\": \"Trip to Seattle\",\n    \"tag\": \"sent\"\n  },\n  {\n    \"to\": \"Carol Bender\",\n    \"address\": \"tristique.neque.venenatis@at.edu\",\n    \"time\": \"2015-03-17 08:13:14\",\n    \"message\": \"Hi Max, please fill out the attached form to complete your enrollment and avoid living under a bridge when you retire. Ut aliquam iaculis, lacus pede sagittis augue, eu tempor erat neque non quam. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aliquam fringilla cursus purus. Nullam scelerisque neque sed sem\",\n    \"subject\": \"401k Paperwork\",\n    \"tag\": \"sent\"\n  },\n  {\n    \"to\": \"Steam Support\",\n    \"address\": \"sapien.gravida.non@pharetraut.com\",\n    \"time\": \"2016-02-23 19:02:54\",\n    \"message\": \"Firewatch is on sale to celebrate the launch! Vel, venenatis vel, faucibus id, libero. Donec consectetuer mauris id sapien. Cras dolor dolor, tempus non, lacinia at, iaculis quis, pede. Praesent eu dui. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\",\n    \"subject\": \"An item from your wishlist is on sale\",\n    \"tag\": \"sent\"\n  },\n  {\n    \"to\": \"DekDev\",\n    \"address\": \"non.ante.bibendum@Morbimetus.com\",\n    \"time\": \"2016-04-10 15:06:31\",\n    \"message\": \"PttS is on Early Access! Nam interdum enim non nisi. Aenean eget metus. In nec orci. Donec nibh. Quisque nonummy ipsum non arcu. Vivamus\",\n    \"subject\": \"Path to the Sky\",\n    \"tag\": \"sent\"\n  },\n  {\n    \"to\": \"Fitbit\",\n    \"address\": \"sit.amet@vitaerisus.org\",\n    \"time\": \"2015-08-30 14:00:12\",\n    \"message\": \"Wow! Impressive! We thought your Fitbit was off, but it turns out that you're just really lazy! Risus a ultricies adipiscing, enim mi tempor lorem, eget mollis lectus pede et risus. Quisque libero lacus, varius et, euismod et, commodo at, libero. Morbi accumsan laoreet ipsum. Curabitur consequat, lectus sit amet luctus vulputate, nisi sem semper erat,\",\n    \"subject\": \"You took a few steps!\",\n    \"tag\": \"sent\"\n  },\n  {\n    \"to\": \"Emery Forbes\",\n    \"address\": \"elit.Etiam.laoreet@Nullatemporaugue.co.uk\",\n    \"time\": \"2015-09-22 06:16:59\",\n    \"message\": \"Hey dude, I opened a new repo for our latest prototype. nec metus facilisis lorem tristique aliquet. Phasellus fermentum convallis ligula. Donec luctus aliquet odio. Etiam ligula tortor, dictum eu, placerat eget, venenatis a, magna. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam laoreet, libero et tristique pellentesque, tellus sem mollis dui, in sodales elit erat vitae risus. Duis a\",\n    \"subject\": \"New repo\",\n    \"tag\": \"sent\"\n  },\n  {\n    \"to\": \"Amazon Pantry\",\n    \"address\": \"massa.Integer.vitae@turpis.org\",\n    \"time\": \"2015-12-19 06:35:19\",\n    \"message\": \"Your food is on the way. You will be able to eat soon! Nunc, ullamcorper eu, euismod ac, fermentum vel, mauris. Integer sem elit, pharetra ut, pharetra sed, hendrerit a, arcu. Sed et libero. Proin mi. Aliquam gravida mauris ut\",\n    \"subject\": \"Your item(s) have shipped.\",\n    \"tag\": \"sent\"\n  }\n]};\n\nexport default mailsMock;","\n\nexport const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];","\n\nimport {months} from '../AppConfig';\n\n// Helper methods\nexport const getPrettyDate = (date) => {\n  date = date.split(' ')[0];\n  const newDate = date.split('-');\n  const month = months[parseInt(newDate[1])];\n  return `${month} ${newDate[2]}, ${newDate[0]}`;\n}\n\n// Remove the seconds from the time\nexport const getPrettyTime = (date) => {\n  const time = date.split(' ')[1].split(':');\n  return `${time[0]}:${time[1]}`;\n}\n\nexport const setInSessionStorage = (item, value) => {\n\tif(typeof value === 'object') {\n\t\tsessionStorage.setItem(item, JSON.stringify(value))\n\t} else {\n\t\tsessionStorage.setItem(item, value)\n\t}\n}\n\nexport const getFromSessionStorage = (item) => {\n\treturn JSON.parse(sessionStorage.getItem(item));\n}\n\nexport const setInLocalStorage = (item, value) => {\n\tif(typeof value === 'object') {\n\t\tlocalStorage.setItem(item, JSON.stringify(value));\n\t} else {\n\t\tlocalStorage.setItem(item, value);\n\t}\n}\n\nexport const getFromLocalStorage = (item) => {\n\treturn JSON.parse(localStorage.getItem(item));\n}\n","import React, { Component } from 'react';\nimport {getPrettyDate, getPrettyTime} from '../utils/utils';\n\n/* Email classes */\nconst EmailListItem = ({ email, onEmailClicked, selected, currentSection }) => {\n  let classes = \"email-item\";\n  if (selected) {\n    classes += \" selected\"\n  }\n    \n  return (\n    <div onClick={() => { onEmailClicked(email.id); }} className={classes}>\n      <div className=\"email-item__unread-dot\" data-read={email.read}></div>\n      <div className=\"email-item__subject truncate\">{email.subject}</div>\n      <div className=\"email-item__details\">\n        {!(currentSection === 'sent') && <span className=\"email-item__from truncate\">{email.from}</span>}\n        {!(currentSection === 'inbox') && <span className=\"email-item__from truncate\">{email.to}</span>}\n        <span className=\"email-item__time truncate\">{getPrettyDate(email.time)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default EmailListItem;","import React, { Component } from 'react';\nimport EmailListItem from './EmailListItem';\n\n/* EmailList contains a list of Email components */\nconst EmailList = ({ emails, onEmailSelected, selectedEmailId, currentSection }) => {\n  if (emails.length === 0) {\n    return (\n      <div className=\"email-list empty\">\n        Nothing to see here, great job!\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"email-list\">\n      {\n        emails.map(email => {\n          return (\n            <EmailListItem\n              onEmailClicked={(id) => { onEmailSelected(id); }}\n              email={email}\n              currentSection={currentSection}\n              selected={selectedEmailId === email.id} />\n          );\n        })\n      }\n    </div>\n  );\n};\n\nexport default EmailList;","import React, {useState} from 'react';\n\n/* Sidebar */\nconst Sidebar = ({ emails, unReadCount, setSidebarSection, composeEmail }) => {\n\n  var deletedCount = emails.reduce(\n    function(previous, msg) {\n      if (msg.tag === \"deleted\") {\n        return previous + 1;\n      }\n      else {\n        return previous;\n      }\n    }.bind(this), 0);\n\n  // const [display, showCompose] = useState();\n\n  return (\n    <div id=\"sidebar\">\n      <div className=\"sidebar__compose\">\n        <a className=\"btn compose\" onClick={() => {composeEmail(true)}}>\n          Compose Mail <span className=\"fa fa-pencil\"></span>\n        </a>\n      </div>\n      <div className=\"section-title\">FOLDERS</div>\n      <ul className=\"sidebar__inboxes\">\n        <li onClick={() => { setSidebarSection('inbox'); }}><a>\n          <span className=\"fa fa-inbox\"></span> Inbox\n          <span className=\"item-count\">{unReadCount > 0 && unReadCount}</span></a></li>\n        <li onClick={() => { setSidebarSection('sent'); }}><a>\n          <span className=\"fa fa-paper-plane\"></span> Sent\n          <span className=\"item-count\"></span></a></li>\n        <li><a>\n          <span className=\"fa fa-pencil-square-o\"></span> Drafts\n          <span className=\"item-count\"></span>\n          </a></li>\n        <li onClick={() => { setSidebarSection('deleted'); }}><a>\n          <span className=\"fa fa-trash-o\"></span> Trash\n          <span className=\"item-count\">{deletedCount}</span>\n          </a></li>\n      </ul>\n      <div className=\"section-title\">CATEGORIES</div>\n      <ul className=\"sidebar__categories\">\n        <li><span className=\"fa fa-circle green\"></span>Work</li>\n        <li><span className=\"fa fa-circle red\"></span>Document</li>\n        <li><span className=\"fa fa-circle blue\"></span>Social</li>\n        <li><span className=\"fa fa-circle orange\"></span>Advertising</li>\n        <li><span className=\"fa fa-circle aqua-blue\"></span>Clients</li>\n      </ul>\n      <div className=\"section-title\">LABELS</div>\n      <ul className=\"sidebar__labels\">\n        <li><span className=\"fa fa-tag\"></span>Family</li>\n        <li><span className=\"fa fa-tag\"></span>Work</li>\n        <li><span className=\"fa fa-tag\"></span>Home</li>\n        <li><span className=\"fa fa-tag\"></span>Children</li>\n        <li><span className=\"fa fa-tag\"></span>Holiday</li>\n        <li><span className=\"fa fa-tag\"></span>Music</li>\n        <li><span className=\"fa fa-tag\"></span>Photography</li>\n        <li><span className=\"fa fa-tag\"></span>Film</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport {getPrettyDate, getPrettyTime} from '../utils/utils';\n\nconst EmailDetails = ({ email, onDelete }) => {\n  if (!email) {\n    return (\n      <div className=\"email-content empty\"></div>\n    );\n  }\n  \n  const date = `${getPrettyDate(email.time)} · ${getPrettyTime(email.time)}`;\n  \n  const getDeleteButton = () => {\n    if (email.tag !== 'deleted') {\n      return <span onClick={() => { onDelete(email.id); }} className=\"delete-btn fa fa-trash-o\"></span>;\n    }\n    return undefined;\n  }\n\n  return (\n    <div className=\"email-content\">\n      <div className=\"email-content__header\">\n        <h3 className=\"email-content__subject\">{email.subject}</h3>\n        {getDeleteButton()}\n        <div className=\"email-content__from\">{email.from}</div>\n        <div className=\"email-content__time\">{date}</div>\n      </div>\n      <div className=\"email-content__message\">{email.message}</div>\n    </div>\n  );\n};\n\nexport default EmailDetails;","import React, { Component } from 'react';\n\nconst EmailHead = ({ currentSectionMails, currentSection, unReadCount }) => {\n  \n  return (\n    <div className=\"email-head\">\n        <div className=\"floatL\">\n          <h2><span className=\"capitalize\">{currentSection}</span>\n          {currentSection === 'inbox' && <span>({unReadCount})</span>}</h2>\n        </div>\n        <div className=\"floatR margin10\">\n          <input type=\"text\" placeholder=\"Search email\" />\n          <span className=\"search-btn\">Search</span>\n        </div>\n        <div className=\"clearB\"></div>\n        <div className=\"fa-btns floatL\">\n          <span><span className=\"fa fa-refresh\"></span>Refresh</span>\n          <span><span className=\"fa fa-eye\"></span></span>\n          <span><span className=\"fa fa-exclamation\"></span></span>\n          <span><span className=\"fa fa-trash-o\"></span></span>\n        </div>\n        <div className=\"fa-btns floatR\">\n          <span><span className=\"fa fa-arrow-left\"></span></span>\n          <span><span className=\"fa fa-arrow-right\"></span></span>\n        </div>\n    </div>\n  );\n};\n\nexport default EmailHead;","import React, { Component } from 'react';\n\n\nclass ComposeEmail extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        to: '',\n        address: '',\n        time: '',\n        from: '',\n        subject: '',\n        message: ''\n    }\n    this.handleEmailSend = this.handleEmailSend.bind(this);\n  }\n\n  handleEmailSend() {\n    const newItem = {...this.state};\n    this.props.newItemSend(newItem);\n  }\n\n  render() {\n\n    return (\n      <form className=\"container mail-compose\">\n        <div className=\"form-group\">\n          <label htmlFor=\"toInput\" className=\"form-label\">To: </label>\n          <input\n            className=\"form-input\"\n            id=\"toInput\"\n            name=\"toInput\"\n            type={this.props.type}\n            value={this.state.to}\n            onChange={(e) => {this.setState({to: e.target.value})}}\n            placeholder={this.props.placeholder} \n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"subjectInput\" className=\"form-label\">Subject: </label>\n          <input\n            className=\"form-input\"\n            id=\"subjectInput\"\n            name=\"subjectInput\"\n            type=\"text\"\n            value={this.state.subject}\n            onChange={(e) => {this.setState({subject: e.target.value})}}\n            placeholder={this.props.placeholder} \n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"mailBody\" className=\"form-label\">MailBody: </label>\n          <textarea\n            rows=\"4\" cols=\"50\"\n            className=\"form-input\"\n            id=\"mailBody\"\n            name=\"mailBody\"\n            value={this.state.message}\n            onChange={(e) => {this.setState({message: e.target.value})}}\n            placeholder={this.props.placeholder} \n          />\n        </div>\n        <input className=\"send-mail-btn\" type=\"button\" onClick={this.handleEmailSend} value=\"Send Email\" />\n      </form>\n    );\n  }\n\n}\n\nexport default ComposeEmail;","import React, { Component } from 'react';\nimport _isEmpty from 'lodash/isEmpty';\nimport EmailList from './components/EmailList';\nimport Sidebar from './components/Sidebar';\nimport EmailDetails from './components/EmailDetails';\nimport EmailHead from './components/EmailHead';\nimport ComposeEmail from './components/ComposeEmail';\n\nimport {getPrettyDate, getPrettyTime, getFromSessionStorage, \n  getFromLocalStorage, setInLocalStorage} from './utils/utils';\n\n\n/* App */\nclass MailBoard extends React.Component {\n  constructor(args) {\n    super(args);\n    \n    // Assign unique IDs to the emails\n    let allMails = this.props.mailsMock.mails;\n    const cachedMails = getFromLocalStorage('sentMails') || [];\n    const loggedInUser = getFromSessionStorage('loggedInUser');\n    if(!_isEmpty(cachedMails)) {\n       cachedMails.forEach((item) => {\n          if (item.to === loggedInUser.emailId || \n             item.address === loggedInUser.emailId) {\n             item.tag = 'inbox';\n             allMails.unshift(item);\n          } else if (item.from === loggedInUser.emailId){\n             item.tag = 'sent';\n             allMails.unshift(item);\n          }\n       })\n    }\n    let id = 0;\n    for (const email of allMails) {\n      email.id = id++;\n    }\n  \n    this.filterEmails = this.filterEmails.bind(this);\n    this.composeEmail = this.composeEmail.bind(this);\n    this.newItemSend = this.newItemSend.bind(this);\n\n    this.state = {\n      selectedEmailId: 0,\n      currentSection: 'inbox',\n      currentSectionMails: allMails,\n      showPane: false,\n      emails: allMails,\n      showCompose: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({currentSectionMails: this.filterEmails('inbox')})\n  }\n\n  filterEmails(type) {\n    const {emails} = this.state;\n    const filterMails = emails.filter(mail => mail.tag === type);\n    return filterMails;\n  }\n  \n  openEmail(id) {\n    const emails = this.state.emails;\n    const index = emails.findIndex(x => x.id === id);\n    emails[index].read = 'true';\n    this.setState({\n      selectedEmailId: id,\n      emails\n    });\n  }\n  \n  deleteMessage(id) {\n    // Mark the message as 'deleted'\n    const emails = this.state.emails;\n    const index = emails.findIndex(x => x.id === id);\n    emails[index].tag = 'deleted';\n    \n    // Select the next message in the list\n    let selectedEmailId = '';\n    for (const email of emails) {\n      if (email.tag === this.state.currentSection) {\n        selectedEmailId = email.id;\n        break;\n      }\n    }\n    \n    this.setState({\n      emails,\n      selectedEmailId\n    });\n  }\n  \n  setSidebarSection(section) {\n    let selectedEmailId = '';\n    let currentSectionMails = this.filterEmails(section);\n\n    selectedEmailId = !_isEmpty(currentSectionMails) && currentSectionMails[0].id;\n    \n    this.setState({\n      currentSection: section,\n      currentSectionMails,\n      selectedEmailId: currentSectionMails && currentSectionMails[0].id,\n      showCompose: false\n    });    \n  }\n  \n  composeEmail(val) {\n    this.setState({showCompose: val});\n  }\n\n  newItemSend(data) {\n     let emails = [...this.state.emails];\n     const CD = new Date();\n     const dateString = `${CD.getFullYear()}-${(CD.getMonth()+1)}-${CD.getDate()}`;\n     const loggedInUser = getFromSessionStorage('loggedInUser');\n     const sentItem = {\n       \"from\": loggedInUser.emailId,\n       \"to\": data.to,\n       \"address\": data.to,\n       \"time\": `${dateString} 06:35:19`,\n       \"message\": data.message,\n       \"subject\": data.subject,\n       \"tag\": \"sent\",\n       \"read\": \"false\"\n     }\n    emails.unshift(sentItem);\n   \n    this.setState({\n      emails,\n      currentSection: 'sent',\n      showCompose: false\n    });\n\n    var itemList = getFromLocalStorage(\"sentMails\") || [];\n    itemList.unshift(sentItem);\n    setInLocalStorage(\"sentMails\", itemList);\n  }\n\n  unReadCount(mails) {\n     var unreadCount = mails.reduce(function(previous, msg) {\n        if (msg.read !== \"true\" ) {\n          return previous + 1;\n        }\n      else {\n        return previous;\n      }\n    }.bind(this), 0);\n    return unreadCount;\n  }\n\n  render() {\n    const {showCompose, emails, selectedEmailId, currentSection} = this.state;\n    const currentEmail = emails.find(x => x.id === selectedEmailId);\n    let currentSectionMails = this.filterEmails(currentSection);\n    const unReadCount = this.unReadCount(emails.filter(x => x.tag === 'inbox'));\n\n\n    const togglePane = () => {\n      this.setState({showPane: !this.state.showPane})\n    }\n    const isAuthenticated = getFromSessionStorage(\"isAuthenticated\");\n\n    return (\n      <div>\n      {isAuthenticated && <div className={`left-pane ${this.state.showPane ? 'expand': ''}`}></div>}\n      <div className={`mail-container ${this.state.showPane ? 'expand': ''}`}>\n        {isAuthenticated && <span className=\"fa fa-align-justify toggle-pane\" onClick={togglePane}/>}\n        <Sidebar\n          emails={emails}\n          unReadCount={unReadCount}\n          composeEmail={(val) => { this.composeEmail(val); }}\n          setSidebarSection={(section) => { this.setSidebarSection(section); }} />\n        <div className=\"inbox-container\">\n          <EmailHead\n            currentSectionMails={currentSectionMails}\n            unReadCount={unReadCount}\n            currentSection={currentSection} />\n          <EmailList\n            emails={currentSectionMails}\n            onEmailSelected={(id) => { this.openEmail(id); }}\n            selectedEmailId={selectedEmailId}\n            currentSection={currentSection} />\n          {!showCompose && <EmailDetails\n            email={currentEmail}\n            onDelete={(id) => { this.deleteMessage(id); }} />}\n          {showCompose && <ComposeEmail newItemSend={this.newItemSend} />}\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default MailBoard;","const credentials = [{\n\tuserName: 'amol',\n\temailId: 'amol@gmail.com',\n  \tpassword: 'amol',\n},{\n\tuserName: 'phani',\n\temailId: 'phani@gmail.com',\n  \tpassword: 'phani',\n}];\n\nexport default credentials;"," import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\n\nimport mailsMock from './mock/inboxMails';\nimport MailBoard from './MailBoard';\nimport {setInSessionStorage, getFromSessionStorage} from './utils/utils';\nimport credentials from './mock/credentials';\n\nclass AuthMailBoard extends Component {\n\n  state = { \n    showPane: false\n  };\n\n  render() {\n    return (\n      <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\n        <div>\n          <AuthButton />\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/login\" component={Login} />        \n          <PrivateRoute path=\"/mailBoard\" component={MailBoard} />\n          {/* For Github demo */}\n          <Route path=\"/email-dashboard/login\" component={Login} />        \n          <PrivateRoute path=\"/email-dashboard/mailBoard\" component={MailBoard} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(username, password, cb) {\n    credentials.forEach((item) => {\n      if (username === item.userName &&\n        password === item.password) {\n          this.isAuthenticated = true;\n          setInSessionStorage(\"loggedInUser\", item);\n          setInSessionStorage(\"isAuthenticated\", true);\n          setTimeout(cb, 1000); // fake async  \n        }\n    });\n  },\n  signout(cb) {\n    this.isAuthenticated = false;\n    setInSessionStorage(\"isAuthenticated\", false);\n    setTimeout(cb, 100);\n  }\n};\n\nconst AuthButton = withRouter(\n  ({ history }) =>\n    getFromSessionStorage(\"isAuthenticated\") ? (\n      <p className=\"user-context\">\n        <span className=\"welcome-text\"> Welcome! </span>\n        <b className=\"logged-in-user\">\n        {getFromSessionStorage(\"loggedInUser\").userName}\n        </b>\n        <button\n          className=\"logout-btn\"\n          onClick={() => {\n            fakeAuth.signout(() => history.push(\"/\"));\n          }}\n        >\n          log out\n        </button>\n      </p>\n    ) : (\n      <p className=\"user-context\"></p>\n    )\n);\n\nfunction PrivateRoute({component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        getFromSessionStorage(\"isAuthenticated\") ? (\n          <Component {...props} mailsMock={mailsMock} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\nclass Login extends Component {\n  state = { \n    loginSuccess: false,\n    username: '',\n    password: ''\n\n  };\n\n  login = () => {\n    const {username, password} = this.state;\n    fakeAuth.authenticate(username, password, () => {\n      this.setState({ loginSuccess: true });\n    });\n  };\n\n  render() {\n    let { from } = this.props.location.state || { from: { pathname: \"/mailBoard\" } };\n    let { loginSuccess } = this.state;\n\n    if (loginSuccess) return <Redirect to={from} />;\n\n    return (\n      <div className=\"login-container\">\n        <form>\n            <div class=\"form-group\"> Already a member\n            </div>\n            <div class=\"form-group\">\n              <i class=\"fa fa-user\"></i>\n              <input type=\"text\" class=\"form-control\" \n              value={this.state.username} \n              onChange={(e) => {this.setState({username: e.target.value})}}\n              placeholder=\"Username\" required=\"required\" />\n            </div>\n            <div class=\"form-group\">\n              <i class=\"fa fa-lock\"></i>\n              <input type=\"password\" class=\"form-control\" \n              value={this.state.password} \n              onChange={(e) => {this.setState({password: e.target.value})}}\n              placeholder=\"Password\" required=\"required\" />         \n            </div>\n            <div class=\"form-group\">\n              <button type=\"button\" class=\"btn btn-login\" onClick={this.login} value=\"Login\">\n                Login\n              </button>\n            </div>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default AuthMailBoard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AuthMailBoard from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Render\nReactDOM.render(<AuthMailBoard />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}